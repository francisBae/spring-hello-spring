plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11' //java 버전 의미

repositories {
	mavenCentral() //아래 라이브러리들을 mavenCentral이라는 사이트에서 받도록 설정한 것
	//필요 시 특정 사이트 url 설정도 가능
}

dependencies {
	//각 라이브러리랑 의존 관계에 있는 라이브러리들을 다 가져온다. (ex. starter-web => tomcat 등등을 가져옴)
	//External Libraries에서 확인 가능
	//의존관계는 intellij 우측 상단 Gradle 눌러서 확인 가능


	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' //html 만드는 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-web' //스프링 웹 개발 위한 라이브러리
	/*
		spring-boot-starter-web 추가 시 관계에 있는 아래 라이브러리가 추가됨
		1. spring-boot-starter-tomcat : 톰캣(웹서버) (서버가 내장형으로 들어있음. embedded server)
		2. spring-webmvc : 스프링 웹 MVC

	 */

	testImplementation 'org.springframework.boot:spring-boot-starter-test' //테스트용 라이브러리(자동으로 추가됨)

	/*
		위 라이브러리 외 공통으로 적용되는 라이브러리
		=> spring-boot-starter : 스프링부트+스프링코어+로깅
		- 로깅은 logback, slf4j 로 사용하는 추세

		sprint-boot-starter-test
		테스트 라이브러리는 junit 주로 사용.
		그 외에 mockito, assertj, spring-test 추가됨

	 */
	implementation 'org.springframework.boot:spring-boot-devtools' //auto reload

	//db 연결을 위한 라이브러리 추가
	//접속 정보는 applicatgion.properties 에 추가
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' //jdbc 드라이버
	runtimeOnly 'com.h2database:h2' //db 제공하는 클라이언트

}

test {
	useJUnitPlatform()
}
